{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/propiedadesReducer.js","reducers/rootReducer.js","store/store.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/home/Navbar.js","actions/propiedad.js","components/home/HomeScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","App.js","index.js"],"names":["types","initialState","checking","propiedades","activePropiedad","rootReducer","combineReducers","auth","state","action","type","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","checkingFinish","login","user","logout","useForm","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","Email","Password","formLoginValues","handleLoginInputChange","className","onSubmit","e","email","password","preventDefault","a","parametros","IDClient","ServiceName","WSToken","MethodHash","ArgumentList","axios","post","process","headers","then","data","DataBeanProperties","ObjectValue","Account","Name1","Name2","Surname1","Surname2","IDAccount","Swal","fire","msg","localStorage","setItem","uid","catch","error","console","log","placeholder","onChange","Navbar","useSelector","onClick","clear","baseUrl","propiedadStartLoading","forEach","element","push","Nombre","Valor","Descripcion","IDPropiedades","Atributo","propiedadLoaded","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","HomeScreen","isOpen","setIsOpen","isOpenDelete","setIsOpenDelete","propiedadSeleccionada","setPropiedadSeleccionada","accionModal","setAccionModal","formPropiedadValues","handlePropiedadInputChange","useEffect","openModal","propiedad","accion","closeModal","closeModalDelete","scope","map","openModalDelete","onRequestClose","style","closeTimeoutMS","overlayClassName","DataBeanName","propiedadStartCreate","id","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","getItem","exact","path","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d6833bc.chunk.js","sourcesContent":["\r\nexport const types = {\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout ',\r\n\r\n    propiedadesLoad: '[propiedad] Propiedades load'\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) =>{\r\n    switch (action.type) {\r\n       \r\n        case types.authLogin:\r\n            return{\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return{\r\n                ...state,\r\n                checking: false\r\n            }\r\n        \r\n        case types.authLogout:\r\n            return{\r\n                checking: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    propiedades: [],\r\n    activePropiedad: null\r\n}\r\n\r\nexport const propiedadReducer = (state = initialState, action) =>{\r\n    switch (action.type) {\r\n        case types.propiedadesLoad:\r\n            return {\r\n                ...state,\r\n                propiedades: [...action.payload]\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { propiedadReducer } from \"./propiedadesReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    propiedades: propiedadReducer\r\n})","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import Swal from \"sweetalert2\";\r\nimport { types } from \"../types/types\";\r\nimport axios from 'axios';\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nexport const startLogin = (email, password) =>{\r\n    return async (dispatch) => {\r\n\r\n        const parametros = {\r\n            IDClient: \"$#HHJGUY9773H5MNKD65389745KJDFGDGG==\",\r\n            ServiceName: \"AdminService\",\r\n            WSToken: \"$#HHJGUYUHSDFGS546546DFH654SGHUJJFF==\",\r\n            MethodHash: \"com.advantage.bean.account.WorkSession_loguinUsuarioWS_String_String\",\r\n            ArgumentList: [\r\n              email,\r\n              password\r\n            ]\r\n          \r\n        }\r\n    \r\n        axios.post(baseUrl, parametros,\r\n            {\r\n                headers: {\r\n                    'Content-type': 'application/x-www-form-urlencoded'\r\n                }\r\n            })\r\n            .then(data => {\r\n                const name = data.data.DataBeanProperties.ObjectValue.DataBeanProperties.Account.DataBeanProperties.Name1 + ' ' +\r\n                             data.data.DataBeanProperties.ObjectValue.DataBeanProperties.Account.DataBeanProperties.Name2  + ' ' +\r\n                             data.data.DataBeanProperties.ObjectValue.DataBeanProperties.Account.DataBeanProperties.Surname1  + ' ' +\r\n                             data.data.DataBeanProperties.ObjectValue.DataBeanProperties.Account.DataBeanProperties.Surname2;\r\n                if(data.data.DataBeanProperties.ObjectValue.DataBeanProperties.IDAccount) {\r\n                    Swal.fire('Ok', data.data.DataBeanProperties.ObjectValue.DataBeanProperties.msg, 'success');\r\n                    localStorage.setItem('uid', data.data.DataBeanProperties.ObjectValue.DataBeanProperties.IDAccount);\r\n                    localStorage.setItem('name', name);\r\n                    dispatch(login({\r\n                                uid: data.data.DataBeanProperties.ObjectValue.DataBeanProperties.IDAccount,\r\n                                name\r\n                            }))\r\n                } else {\r\n                    Swal.fire('Error', data.data.DataBeanProperties.ObjectValue.DataBeanProperties.msg, 'error');\r\n                }\r\n            })\r\n            .catch(error=> console.log(error))\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n        if(localStorage.getItem('uid')) {\r\n            dispatch(login({\r\n                        uid: localStorage.getItem('uid'),\r\n                        name: localStorage.getItem('name')\r\n                    }))\r\n        } else {\r\n            dispatch(checkingFinish());\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({type: types.authCheckingFinish});\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\n\r\nexport const startLogout = () =>{\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nconst logout = () => ({type: types.authLogout});","import { useState } from \"react\"\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = (newFormState = initialState) => {\n        setValues( newFormState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}\n","import React from 'react'\r\nimport { startLogin } from '../../actions/auth';\r\nimport {useForm} from '../../hooks/useForm'\r\nimport { useDispatch } from 'react-redux';\r\nimport './login.css'\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n        Email: 'Kevin.zarate@advantage.com.co',\r\n        Password: '12345678Amc*'\r\n    });\r\n\r\n    const {Email, Password} = formLoginValues;\r\n\r\n    const handleLogin = (e) =>{\r\n        e.preventDefault();\r\n        dispatch(startLogin(Email, Password));\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container login-container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-4\"></div>\r\n                    <div className=\"col-lg-4 login-form-1\">\r\n                        <h3>Iniciar sesión</h3>\r\n                        <form onSubmit={handleLogin}>\r\n                            <div className=\"form-group\">\r\n                                <input \r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Correo\"\r\n                                    name=\"Email\"\r\n                                    value={Email}\r\n                                    onChange={handleLoginInputChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group mt-2\">\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Contraseña\"\r\n                                    name=\"Password\"\r\n                                    value={Password}\r\n                                    onChange={handleLoginInputChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group mt-2\">\r\n                                <input \r\n                                    type=\"submit\"\r\n                                    className=\"btnSubmit\"\r\n                                    value=\"Login\" \r\n                                />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"col-lg-4\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {name} = useSelector(state => state.auth);\r\n\r\n    const logout = () => {\r\n        dispatch(startLogout())\r\n    } \r\n\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-dark bg-dark\">\r\n                <div className=\"container-fluid\"> \r\n                <a className=\"navbar-brand\">{name}</a>\r\n                <div className=\"d-flex\">\r\n                    <button className=\"btn btn-outline-danger\" type=\"button\" onClick={logout}>Logout</button>\r\n                </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n","import Swal from \"sweetalert2\";\r\nimport { types } from \"../types/types\";\r\nimport axios from 'axios';\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nexport const propiedadStartLoading = () => {\r\n    return async (dispatch) => {\r\n\r\n        const propiedades = [];\r\n\r\n        const parametros = {\r\n            \"IDClient\": \"$#HHJGUY9773H5MNKD65389745KJDFGDGG==\",\r\n            \"ServiceName\": \"AdminService\",\r\n            \"WSToken\": \"$#HHJGUYUHSDFGS546546DFH654SGHUJJFF==\",\r\n            \"MethodHash\": \"java.util.List_getPropiedadesCatalogPorPropiedad_String_Object_Number\",\r\n            \"ArgumentList\": [\r\n              null,\r\n              null,\r\n              null\r\n            ]          \r\n        }\r\n\r\n        axios.post(baseUrl, parametros,\r\n            {\r\n                headers: {\r\n                    'Content-type': 'application/x-www-form-urlencoded'\r\n                }\r\n            })\r\n            .then(data => {\r\n                data.data.DataBeanProperties.ObjectValue.forEach(element => {\r\n                    propiedades.push({\r\n                        Nombre: element.DataBeanProperties.Nombre,\r\n                        Valor:  element.DataBeanProperties.Valor,\r\n                        Descripcion: element.DataBeanProperties.Descripcion,\r\n                        IDPropiedades: element.DataBeanProperties.IDPropiedades,\r\n                        Atributo: element.DataBeanProperties.Atributo\r\n                    })\r\n                });\r\n                dispatch(propiedadLoaded(propiedades))\r\n            })\r\n            .catch(error => console.log(error))\r\n\r\n    } \r\n}\r\n\r\nconst propiedadLoaded = (propiedades) => ({\r\n    type: types.propiedadesLoad,\r\n    payload: propiedades\r\n})\r\n\r\nexport const propiedadStartUpdate = (propiedad) => {\r\n    return async (dispatch) => {\r\n        const parametros = {\r\n                IDClient: \"$#HHJGUY9773H5MNKD65389745KJDFGDGG==\",\r\n                ServiceName: \"AdminService\",\r\n                WSToken: \"$#HHJGUYUHSDFGS546546DFH654SGHUJJFF==\",\r\n                MethodHash:   \"com.admin.bean.Propiedades_updatePropiedades_com.admin.bean.Propiedades\",\r\n                ArgumentList: [\r\n                  {\r\n                    DataBeanProperties: {\r\n                    Nombre: propiedad.Nombre,\r\n                    Valor: propiedad.Valor,\r\n                    Descripcion: propiedad.Descripcion,\r\n                    IDPropiedades: propiedad.IDPropiedades,\r\n                    Atributo: propiedad.Atributo,\r\n                    },\r\n                    DataBeanName: \"com.admin.bean.Propiedades\"\r\n                  }\r\n                ]              \r\n        }\r\n\r\n        axios.post(baseUrl, parametros,\r\n            {\r\n                headers: {\r\n                    'Content-type': 'application/x-www-form-urlencoded'\r\n                }\r\n            })\r\n            .then(data => {\r\n                dispatch(propiedadStartLoading());\r\n                Swal.fire('Ok', 'Registro actualizado', 'success')\r\n            })\r\n            .catch(error => Swal.fire('Error', 'error', 'error') )\r\n    }\r\n}\r\n\r\nexport const propiedadStartCreate = (propiedad) => {\r\n    return async (dispatch) => {\r\n        const parametros = {\r\n            IDClient: \"$#HHJGUY9773H5MNKD65389745KJDFGDGG==\",\r\n            ServiceName: \"AdminService\",\r\n            WSToken: \"$#HHJGUYUHSDFGS546546DFH654SGHUJJFF==\",\r\n            MethodHash:   \"com.admin.bean.Propiedades_updatePropiedades_com.admin.bean.Propiedades\",\r\n            ArgumentList: [\r\n              {\r\n                DataBeanProperties: {\r\n                Nombre: propiedad.Nombre,\r\n                Valor: propiedad.Valor,\r\n                Descripcion: propiedad.Descripcion,\r\n                IDPropiedades: propiedad.IDPropiedades,\r\n                Atributo: propiedad.Atributo,\r\n                },\r\n                DataBeanName: \"com.admin.bean.Propiedades\"\r\n              }\r\n            ]              \r\n    }\r\n\r\n    axios.post(baseUrl, parametros,\r\n        {\r\n            headers: {\r\n                'Content-type': 'application/x-www-form-urlencoded'\r\n            }\r\n        })\r\n        .then(data => {\r\n            dispatch(propiedadStartLoading());\r\n            Swal.fire('Ok', 'Registro creado', 'success')\r\n        })\r\n        .catch(error => Swal.fire('Error', 'error', 'error') )\r\n    }\r\n}\r\n\r\nexport const propiedadStartDelete = (id) => {\r\n    return async (dispatch) => {\r\n        const parametros = {\r\n            IDClient: \"$#HHJGUY9773H5MNKD65389745KJDFGDGG==\",\r\n            ServiceName: \"AdminService\",\r\n            WSToken: \"$#HHJGUYUHSDFGS546546DFH654SGHUJJFF==\",\r\n            MethodHash: \"boolean_deletePropiedades_Number\",\r\n            ArgumentList: [\r\n              id\r\n            ] \r\n        }\r\n\r\n        axios.post(baseUrl, parametros,\r\n            {\r\n                headers: {\r\n                    'Content-type': 'application/x-www-form-urlencoded'\r\n                }\r\n            })\r\n            .then(data => {\r\n                dispatch(propiedadStartLoading());\r\n                Swal.fire('Ok', 'Registro eliminado', 'success')\r\n            })\r\n            .catch(error => Swal.fire('Error', 'error', 'error') )\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Navbar } from './Navbar'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { propiedadStartLoading, propiedadStartUpdate, propiedadStartCreate, propiedadStartDelete } from '../../actions/propiedad';\r\nimport Modal from 'react-modal';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n  };\r\n  Modal.setAppElement('#root');\r\nexport const HomeScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {propiedades} = useSelector(state => state.propiedades);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [isOpenDelete, setIsOpenDelete] = useState(false);\r\n    const [propiedadSeleccionada, setPropiedadSeleccionada] = useState({})\r\n    const [accionModal, setAccionModal] = useState('')\r\n\r\n    const [formPropiedadValues, handlePropiedadInputChange, reset] = useForm({\r\n        Nombre: '',\r\n        Valor: '',\r\n        Descripcion: '',\r\n        Atributo: '',\r\n    });\r\n\r\n    const {Nombre, Valor, Descripcion, Atributo} = formPropiedadValues;\r\n\r\n    useEffect(() => {  \r\n        dispatch(propiedadStartLoading());\r\n    }, [!propiedades]);\r\n\r\n    const openModal = (propiedad, accion) => {\r\n        setPropiedadSeleccionada(propiedad);\r\n        setAccionModal(accion);\r\n        reset({\r\n            Nombre: propiedad.Nombre || '',\r\n            Valor: propiedad.Valor || '',\r\n            Descripcion: propiedad.Descripcion || '',\r\n            Atributo: propiedad.Atributo || '',\r\n        })\r\n        setIsOpen(true);\r\n    } \r\n    \r\n    const closeModal = () => {\r\n        setIsOpen(false);\r\n    } \r\n    \r\n    const openModalDelete = (propiedad) => {\r\n        setPropiedadSeleccionada(propiedad);\r\n        setIsOpenDelete(true);\r\n    } \r\n    \r\n    const closeModalDelete = () => {\r\n        setIsOpenDelete(false);\r\n    } \r\n\r\n    const handleEditarPropiedad = (e) => {\r\n        e.preventDefault();\r\n        console.log(propiedadSeleccionada)\r\n        if(accionModal === 'editar'){\r\n            dispatch(propiedadStartUpdate({\r\n                Nombre,\r\n                Valor,\r\n                Descripcion,\r\n                Atributo,\r\n                IDPropiedades: propiedadSeleccionada.IDPropiedades\r\n            }))\r\n        } else {\r\n            dispatch(propiedadStartCreate({\r\n                Nombre,\r\n                Valor,\r\n                Descripcion,\r\n                Atributo,\r\n                IDPropiedades: null\r\n            }))\r\n        }\r\n        closeModal();\r\n    }\r\n\r\n    const handleDeletePropiedad = (e) => {\r\n        e.preventDefault();\r\n        dispatch(propiedadStartDelete(propiedadSeleccionada.IDPropiedades));\r\n        closeModalDelete();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar/>\r\n            <button className=\"btn btn-primary btn-sm ms-1 mt-2 mb-2\" type=\"button\" onClick={()=>openModal({}, 'crear')}>Agregar</button>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                    <th scope=\"col\">ID</th>\r\n                    <th scope=\"col\">Nombre</th>\r\n                    <th scope=\"col\">Valor</th>\r\n                    <th scope=\"col\">Descripcion</th>\r\n                    <th scope=\"col\">Atributo</th>\r\n                    <th scope=\"col\">Acciones</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        propiedades.map( propiedad => (\r\n                            <tr key={propiedad.IDPropiedades}>\r\n                            <th scope=\"row\">{propiedad.IDPropiedades}</th>\r\n                            <td>{propiedad.Nombre}</td>\r\n                            <td>{propiedad.Valor}</td>\r\n                            <td>{propiedad.Descripcion}</td>\r\n                            <td>{propiedad.Atributo}</td>\r\n                            <td>\r\n                            <button className=\"btn btn-danger btn-sm\" type=\"button\" onClick={()=>openModalDelete(propiedad)}>Eliminar</button>\r\n                            <button className=\"btn btn-primary btn-sm ms-1\" type=\"button\" onClick={()=>openModal(propiedad, 'editar')}>Editar</button>\r\n                            </td>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n            <Modal\r\n                isOpen={isOpen}\r\n                //   onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                closeTimeoutMS={200}\r\n                className=\"modal\"\r\n                overlayClassName=\"modal-fondo\"\r\n            >\r\n                <h1>{accionModal === 'editar'? 'Editar Propiedad' : 'Crear Propiedad' }</h1>\r\n                <hr/>\r\n                <form onSubmit={handleEditarPropiedad}>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"form-label\">Nombre</label>\r\n                                <input \r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Nombre\"\r\n                                    name=\"Nombre\"\r\n                                    value={Nombre}\r\n                                    onChange={handlePropiedadInputChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group mt-2\">\r\n                            <label className=\"form-label\">Valor</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Valor\"\r\n                                    name=\"Valor\"\r\n                                    value={Valor}\r\n                                    onChange={handlePropiedadInputChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group mt-2\">\r\n                                <label className=\"form-label\">Descripción</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Descripción\"\r\n                                    name=\"Descripcion\"\r\n                                    value={Descripcion}\r\n                                    onChange={handlePropiedadInputChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group mt-2\">\r\n                                <label className=\"form-label\">Atributo</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Atributo\"\r\n                                    name=\"Atributo\"\r\n                                    value={Atributo}\r\n                                    onChange={handlePropiedadInputChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group mt-2\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" onClick={closeModal}>cancelar</button>\r\n                                <button type=\"submit\" className=\"btn btn-primary ms-5\">{accionModal}</button>\r\n                            </div>\r\n                        </form>\r\n            </Modal>\r\n            <Modal\r\n                isOpen={isOpenDelete}\r\n                //   onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModalDelete}\r\n                style={customStyles}\r\n                closeTimeoutMS={200}\r\n                className=\"modal\"\r\n                overlayClassName=\"modal-fondo\"\r\n            >\r\n                <h1 className=\"mb-4\">¿Desea eliminar ésta propiedad?</h1>\r\n                <button type=\"button\" className=\"btn btn-secondary\" onClick={closeModalDelete}>cancelar</button>\r\n                <button type=\"button\" className=\"btn btn-danger ms-5\" onClick={handleDeletePropiedad}>Eliminar</button>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const PrivateRoute = ({  \r\n    isAuthenticated,\r\n    component: Component,  //se renombra con C mayuscula para que no se confunda abajo\r\n    ...rest\r\n}) => {\r\n\r\n    // console.log(rest.location.pathname); // ya tengo ahí el pathname entonces no hay necesidad de usar el hook para sacarlo.\r\n    // localStorage.setItem('lastPath', rest.location.pathname);  // en esta aplicacion no necesitamos el localstorage\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={(props) => (\r\n                (isAuthenticated)\r\n                    ? (<Component {...props}/>)\r\n                    : (<Redirect to=\"/login\"/>)\r\n            )}\r\n        \r\n        />\r\n\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const PublicRoute = ({  \r\n    isAuthenticated,\r\n    component: Component,  //se renombra con C mayuscula para que no se confunda abajo\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n            component={(props) => (\r\n                (!isAuthenticated)\r\n                    ? (<Component {...props}/>)\r\n                    : (<Redirect to=\"/\"/>)\r\n            )}\r\n        \r\n        />\r\n\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { startChecking } from \"../actions/auth\";\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { HomeScreen } from \"../components/home/HomeScreen\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { uid} = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {  \r\n        dispatch(startChecking())  //renueva el token\r\n    }, [dispatch]);\r\n\r\n\r\n    return (\r\n        <Router>\r\n        <div>\r\n          <Switch>\r\n            <PublicRoute isAuthenticated={!!uid} exact path=\"/login\" component={LoginScreen}/>\r\n            <PrivateRoute isAuthenticated={!!uid} exact path=\"/\" component={HomeScreen}/>\r\n            <Redirect to=\"/\"/>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    )\r\n}\r\n","import { Provider } from 'react-redux'\nimport {store} from './store/store'\nimport { AppRouter } from './routers/AppRouter'\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <AppRouter/>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}